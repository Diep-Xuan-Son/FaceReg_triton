version: '3'
networks:
  mynetwork_bridge:
    driver: bridge
services:
  redis1:
    image: redis
    container_name: face-redis1
    restart: always
    ports: 
      - "6400:6400"
    volumes:
      - ./data:/data
      - ./config/redis1.conf:/usr/local/etc/redis/redis.conf
    networks:
      mynetwork_bridge:
    profiles:
      - redis
    command: redis-server /usr/local/etc/redis/redis.conf
  # redis2:
  #   image: redis
  #   container_name: face-redis2
  #   ports: 
  #     - "6401:6401"
  #   volumes:
  #     - ./data:/data
  #     - ./config/redis2.conf:/usr/local/etc/redis/redis.conf
  #   profiles:
  #     - dev2
  #   command: redis-server /usr/local/etc/redis/redis.conf

  triton_server:
    image: dixuson/tritonserver
    container_name: triton-server
    restart: always
    environment:
      - PYTHONIOENCODING=UTF-8
    build:
      dockerfile: Dockerfile_triton
      shm_size: '4gb'
    shm_size: "4gb"
    ports: 
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    volumes:
      - .:/workspace/
      - ./my_repository:/models
      - ./requirements.txt:/opt/tritonserver/requirements.txt
      # - ./son_triton.tar.gz:/opt/tritonserver/env/son_triton.tar.gz
    networks:
      mynetwork_bridge:
    profiles:
      - triton_server
    command: tritonserver --model-repository=/models --model-control-mode=poll --repository-poll-secs=5

  controller_server:
    image: dixuson/facereg_triton
    container_name: controller_ai
    restart: always
    environment:
      - TRITONSERVER_IP=triton_server
      - TRITONSERVER_PORT=8001
      - REDISSERVER_IP=redis1
      - REDISSERVER_PORT=6400
    build:
      dockerfile: Dockerfile_controller
    ports: 
      - "8421:8421"
    depends_on:
      - redis1
      - triton_server
    volumes:
      - ./src/static:/controller_server/static
    #   - ./src:/workspace/
    networks:
      mynetwork_bridge:
    profiles:
      - controller_ai
    # command: python3.11 controller.py
    command: uvicorn --workers 1 --host 0.0.0.0 --port 8421 controller:app


# docker compose -f docker-compose.yml --profile dev1 up -d
# docker compose -f docker-compose.yml --profile "*" up -d
# docker compose -f docker-compose.yml --profile triton_server up -d